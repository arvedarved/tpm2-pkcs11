#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

PROJECT="tpm2-pkcs11"
COV_PROJECT="$PROJECT"
COV_EMAIL=william.c.roberts@intel.com

set -e

# Sanity check, this should only be executing on the coverity_scan branch
if [ "$REPO_BRANCH" != "coverity_scan" ]; then
  echo "coverity.run invoked for non-coverity branch $REPO_BRANCH...exiting!"
  exit 1
fi

# branch is coverity_scan
echo "Running coverity build"

# ensure coverity_scan tool is available to the container
if [ ! -f "$(pwd)/coverity-analysis/bin/cov-build" ]; then
  curl --data-urlencode "project=$COV_PROJECT" \
       --data-urlencode "token=$COVERITY_SCAN_TOKEN" \
       "https://scan.coverity.com/download/linux64" -o coverity_tool.tgz

  curl --data-urlencode "project=$COV_PROJECT" \
       --data-urlencode "token=$COVERITY_SCAN_TOKEN" \
       --data-urlencode "md5=1" \
       "https://scan.coverity.com/download/linux64" -o coverity_tool.md5
  echo "$(cat coverity_tool.md5)" coverity_tool.tgz | md5sum -c
fi

echo "unpacking cov-analysis"
tar -xf coverity_tool.tgz
mv cov-analysis-* cov-analysis

source $DOCKER_BUILD_DIR/.ci/docker-prelude.sh

export PATH=$PATH:$DOCKER_BUILD_DIR/cov-analysis/bin

if [[ "$CC" == clang* ]]; then
  echo "Coverity scan branch detected, not running with clang...exiting!"
  exit 0
fi

echo "Performing build with Coverity Scan"
rm -fr $DOCKER_BUILD_DIR/cov-int
./bootstrap && ./configure --enable-debug && make clean
cov-build --dir $DOCKER_BUILD_DIR/cov-int make -j $(nproc)

echo "Collecting Coverity data for submission"
rm -fr README
export AUTHOR="$(git log -1 $HEAD --pretty="%aN")"
echo "Name: $AUTHOR" >> README
echo "Email: $COV_EMAIL" >> README
echo "Project: tpm2-pkcs11" >> README
echo "Build-Version: $(git rev-parse HEAD)" >> README
echo "Description: $REPO_SLUG $REPO_BRANCH" >> README
echo "Submitted-by: tpm2-pkcs11 CI" >> README
rm -fr tpm2-pkcs11-scan.tgz
tar -czf $DOCKER_BUILD_DIR/tpm2-pkcs11-scan.tgz README cov-int

rm -fr README cov-int

# upload the results
echo "Testing for scan results..."
scan_file=$(stat --printf='%n' tpm2-*-scan.tgz)

echo "Submitting data to Coverity"
curl --form token="$COVERITY_SCAN_TOKEN" \
  --form email="$COV_EMAIL" \
  --form project="$COV_PROJECT" \
  --form file=@"$scan_file" \
  --form version="$(git rev-parse HEAD)" \
  --form description="$REPO_SLUG $REPO_BRANCH" \
  "https://scan.coverity.com/builds?project=$PROJECT"

rm -fr tpm2-*-scan.tgz

exit 0
